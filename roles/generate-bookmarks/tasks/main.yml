---
- name: get consoleUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .consoleUrl
  register: vz_url_console_result
  become: true
  become_user: "{{ install_user }}"
- name: get elasticUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .elasticUrl
  register: vz_url_elasticUrl_result
  become: true
  become_user: "{{ install_user }}"
- name: get grafanaUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .grafanaUrl
  register: vz_url_grafanaUrl_result
  become: true
  become_user: "{{ install_user }}"
- name: get keyCloakUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .keyCloakUrl
  register: vz_url_keyCloakUrl_result  
- name: get kialiUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .kialiUrl
  register: vz_url_kialiUrl_result  
  become: true
  become_user: "{{ install_user }}"
- name: get kibanaUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .kibanaUrl
  register: vz_url_kibanaUrl_result 
  become: true
  become_user: "{{ install_user }}" 
- name: get prometheusUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .prometheusUrl
  register: vz_url_prometheusUrl_result 
  become: true
  become_user: "{{ install_user }}"
- name: get rancherUrl
  shell: |
    kubectl get vz -o jsonpath="{.items[].status.instance}" | jq -r .rancherUrl
  register: vz_url_rancherUrl_result 
  become: true
  become_user: "{{ install_user }}"
- name: Gather Verrazzano Console Password
  shell: |
    kubectl get secret --namespace verrazzano-system verrazzano -o jsonpath={.data.password} | base64 --decode; echo
  register: vz_pass_result
  become: true
  become_user: "{{ install_user }}"
- name: Gather Keycloak Console Password
  shell: |
    kubectl get secret \
    --namespace keycloak keycloak-http \
    -o jsonpath={.data.password} | base64 \
    --decode; echo
  register: keycloak_pass_result
  become: true
  become_user: "{{ install_user }}"
- name: Gather Rancher Console Password
  shell: |
    kubectl get secret \
    --namespace cattle-system rancher-admin-secret \
    -o jsonpath={.data.password} | base64 \
    --decode; echo
  register: rancher_pass_result
  become: true
  become_user: "{{ install_user }}"
- name: set facts
  set_fact:
    vz_console_url: "{{ vz_url_console_result.stdout }}"
    vz_elasticUrl_url: "{{ vz_url_elasticUrl_result.stdout }}"
    vz_grafanaUrl_url: "{{ vz_url_grafanaUrl_result.stdout }}"
    vz_keyCloakUrl_url: "{{ vz_url_keyCloakUrl_result.stdout }}"
    vz_kialiUrl_url: "{{ vz_url_kialiUrl_result.stdout }}"
    vz_kibanaUrl_url: "{{ vz_url_kibanaUrl_result.stdout }}"
    vz_prometheusUrl_url: "{{ vz_url_prometheusUrl_result.stdout }}"
    vz_console_pass: "{{ vz_pass_result.stdout }}"
    keycloak_console_pass: "{{ keycloak_pass_result.stdout }}"
    rancher_console_pass: "{{ rancher_pass_result.stdout }}"
- name: print facts
  debug:
    var: "{{ item }}"
  loop: 
    - vz_console_url
    - vz_elasticUrl_url
    - vz_grafanaUrl_url
    - vz_keyCloakUrl_url
    - vz_kialiUrl_url
    - vz_kibanaUrl_url
    - vz_prometheusUrl_url
    - vz_console_pass
    - keycloak_console_pass
    - rancher_console_pass
- name: generate bookmarks.html
  template:
    src: templates/bookmark-import.j2
    dest: $HOME/Desktop/bookmarks.html
  delegate_to: localhost
- name: generate credentials.yml
  template:
    src: templates/credentials.j2
    dest: $HOME/Desktop/credentials.yml
  delegate_to: localhost